# ------------------------------------------------------------------------------
# The loader factory of total framework 
# Written by Haiyang Liu (haiyangliu1997@gmail.com)
# ------------------------------------------------------------------------------


from . import cmu_mainloader
from . import pifpaf_mainloader
from . import cmu_h5_mainloader
from . import pifpaf_mask_mainloader

def loader_cli(parser,loader_name):
    '''
    choose cmu 117k maybe best
    '''
    loader_lookuptable = {
        'CMU_120K'      : cmu_mainloader.loader_cli,
        'OpenPifPaf'    : pifpaf_mainloader.train_cli,
        'CMU_117K'      : cmu_h5_mainloader.loader_cli,
        'PifPaf_mask'   : pifpaf_mask_mainloader.loader_cli
    }
    try:
        loader_function = loader_lookuptable.get(loader_name,other)
        loader_function(parser)
    except:
        print('dataloader name error, please choose CMU_120K,OpenPifPaf,PifPaf_mask,or CMU_117K')


    # if loader_name == 'CMU_120k':
    #     ''' 
    #     by tensorboy old version code, now not available
    #     '''
    #     print('choose CMU 120k/4k data, loading parameters...')
    #     cmu_mainloader.loader_cli(parser)
    # elif loader_name == 'OpenPifPaf':
    #     '''
    #     by openpifpaf
    #     '''
    #     print('choose openpifpaf 50~60k data, loading parameters...')
    #     pifpaf_mainloader.train_cli(parser)
    # elif loader_name == 'CMU_117K':
    #     '''
    #     by Kevin, Keras-openpose-reproduce
    #     '''
    #     print('choose CMU offical 117K/2K data, loading parameters...')
    #     cmu_h5_mainloader.loader_cli(parser)
    # elif loader_name == 'PifPaf_mask':
    #     '''
    #     by myself, add mask before training in openpifpaf data
    #     '''
    #     print('choose PifPaf_mask 53K data, loading parameters...')
    #     pifpaf_mask_mainloader.loader_cli(parser)
    # print('dataloader name error, please choose CMU_120K,OpenPifPaf or CMU_117K')


def loader_factory(args):
    '''
    CMU_120K: 1. 120K data for training, generated by train2014+val2014.
         2. 4K for val, generated by first 2.6k images in val2014.
         3. haven't masked the train img, mask when calculte loss.
         4. mask condition, iscrowd, size<32*32,joints<5 and too close.
    OpenPifPaf:
         1. 64k,56k,117k data for training depend on your choose in train2017
         2. 2.6K or 5K for val depend on choose in val2014
         3. no mask
    PifPaf_mask:
         1. base on OpenPifPaf and add mask for bad person annotations
         2. currently only mask before training, not good.
         3. after fliter image from 56k to 53k, mAP decrease 1.% 
    CMU_single:
         1. 55k for trianing, generated by train2017
         2. one image only using one time.       
    '''
    loader_name = args.loader

    loader_LUT_factory = {
        'CMU_120K'      : cmu_mainloader.train_factory,
        'OpenPifPaf'    : pifpaf_mainloader.train_factory,
        'CMU_117K'      : cmu_h5_mainloader.train_factory,
        'PifPaf_mask'   : pifpaf_mask_mainloader.train_factory
    }
    try:
        loader_ = loader_LUT_factory.get(loader_name,other)
        return loader_
    except:
        print('dataloader name error, please choose CMU_120K,OpenPifPaf,PifPaf_mask or CMU_117K')

    # if loader_name == 'CMU':  
    #     print('train img size: {}'.format(args.img_size))
    #     #print('processing method: {}'.format(args.preprocess))
    #     train_factory_cmu = cmu_mainloader.train_factory
    #     return train_factory_cmu
    # elif loader_name == 'OpenPifPaf':
    #     train_factory_pifpaf = pifpaf_mainloader.train_factory
    #     return train_factory_pifpaf
    # elif loader_name == 'CMU_single':
    #     pass
    # else: print('loader name error, please choose CMU, OpenPifPaf or CMU_single')    
